# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-web/documentation/examples/rigidbody,v 1.8 2015/05/14 12:19:11 masarati Exp $
#
# MBDyn (C) is a multibody analysis code.
# http://www.mbdyn.org
#
# Copyright (C) 1996-2015
#
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
#
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
#
# Changing this copyright notice is forbidden.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
#
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#


# in this file, pendulum is initially at an abitrary angle

begin: data;
	problem: initial value; # the default, basic problem
end: data;

begin: initial value;
  initial time: 0.0;
  time step: 1e-3;
  final time: 5000*0.001;

  method: ms, 0.50;
  linear solver: naive, colamd;
  nonlinear solver: newton raphson, modified, 5;

  tolerance: 1e-10;
  max iterations: 30;

  #derivatives coefficient: 1e-9;
  #derivatives tolerance: 1e9;# Skip the derivatives process.
  derivatives max iterations: 10;

	#output: iterations;
	#output: residual;
	#output: solution;
end: initial value;

begin: control data;
	# output results: netcdf;
	structural nodes: 1;#pendulum
	rigid bodies: 1;
	joints: 1;
#	forces: 1;
  loadable elements:
  +1
  ;
	gravity;
	#skip initial joint assembly;
end: control data;


set: const real PI=3.141592653589793238462643;
set: const real L = 0.2;
set: const real V0 = 1.0;
set: const real alpha=0.0/180.0*PI;

begin: nodes;
	# in zero, with horizontal speed
	structural: 1, dynamic,
		L*sin(alpha), -L*cos(alpha),0.0,	# position
    # orientation
		matr, cos(alpha), -sin(alpha), 0.0,
    sin(alpha), cos(alpha),  0.0,
    0.0,        0.0,         1.0,
		orientation description, euler321,
		#matr, 1.0,  0.0,  0.0,
    #			0.0,  0.0,  1.0,
    #			0.0, -1.0,  0.0,
		V0*cos(alpha),V0*sin(alpha),0.0,	# initial velocity (1 m/s in y)
		0.0,  0.0, V0/L,
		accelerations, yes;	# angular velocity
end: nodes;

begin: elements;
	body: 1, 1,
		1.,	# mass
		null,	# cm offset
		matr,
			1.0, 0.0,  0.0,
			0.0, 1.0,  0.0,
			0.0,  0.0, 1.0;	# inertia sensor (irrelevant)

	joint: 1, total pin joint,
		1,
			position, reference, global, 0., 0., 0.,
			position orientation, reference, global, eye,
			rotation orientation, reference, global, eye,
		# ground
			position, reference, global, 0., 0., 0.,
			position orientation, reference, global, eye,
			rotation orientation, reference, global, eye,
		position constraint, 1, 1, 1, null,
		orientation constraint, 1, 1, 0, null,
			# output, yes;
			output, yes;

  module load: "libmodule-chrono-interface";
  user defined: 1, ChronoInterface,
                coupling,tight,20,
                tolerance, 0.0001, # just coupling, none, coupling, tight
								motor type, setpoint,#spline,#
                length scale, 1000.0,
                mass scale, 1.0,# length scale, force scale...
                nodes number, 1, # nodes number, 1,
                1,
								offset, 0.0, -L,0.0,
								#offset, L*sin(alpha), 0.0, -L*cos(alpha), # default: relative to the node reference.
								1, # the last number denote the ID of bodies in C::E model
								output, yes,
                ground, 0,# ground bodies in C::E model
								position, L*sin(alpha), -L*cos(alpha),0.0, #default: relative to global
								orientation, eye, # body ID, position, orientation
								verbose, no;

	gravity: uniform, 0., -1., 0., const, 9.81;
end: elements;

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 1
##############################################################################################################

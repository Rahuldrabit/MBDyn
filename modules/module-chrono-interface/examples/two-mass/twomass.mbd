#example.
#2-dof sliders with structural force

begin: data;
  problem: initial value;
end: data;

begin: initial value;
  initial time: 0.0;
  time step: 1e-3;
  final time:1*0.001;

  method: ms, 0.56;
  linear solver: naive, colamd;
	#nonlinear solver: newton raphson, modified, 5;
  nonlinear solver: newton raphson, modified, 5;

	tolerance: 1e-10;
	max iterations: 30;

	#derivatives coefficient: 1e-9;
	#derivatives tolerance: 1e9;
  #derivatives tolerance: 1e-6;
	derivatives max iterations: 10;
  output: iterations;
  #output: residual;
end: initial value;

begin: control data;
  #skip initial joint assembly;
  #default output: none;#, structural nodes;
  structural nodes:
  +1 #GROUND
  +1 #sliders
  ;

  rigid bodies:
  +1 #slider
  ;

  joints:
  +1 #clamp
  +1 #spring between slider and GROUND
  +1 #constraint between slider and Ground
  ;

  forces:
  #+1 #external
  ;
  loadable elements:
  +1
  ;
  gravity;
  output frequency: 1;#10;
end: control data;

set: const integer GROUND = 0;
set: const integer MASS_1 = 1;
set: const integer SPRING_1 = 1;

set: const real mass=1.0;
set: const real initial_position = 1.0e0;
set: const real initial_length=1.0e0;
set: const real initial_velocity=0.1;
set: const real K = 0.0;#5000.0
set: const real C = 0.0;
set: const real alpha=30.0*deg2rad; # angle with respect to axis z

reference: GROUND,
  reference, global, null,
  reference, global, eye,
  reference, global, null,
  reference, global, null;

reference: MASS_1,
  reference, GROUND, initial_position, 0.0 ,0.0,
  reference, GROUND, eye,
  reference, GROUND, null,
  reference, GROUND, null;

begin: nodes;
  structural: GROUND,
    static,
    reference, GROUND, null,
    reference, GROUND, eye,
    reference, GROUND, null,
    reference, GROUND, null,
    output, no;

  structural: MASS_1,
    dynamic,
    reference, MASS_1, null,
    #reference, MASS_1, eye,
    matr, cos(alpha), -sin(alpha), 0.0,
          sin(alpha), cos(alpha),  0.0,
          0.0,        0.0,         1.0,
    reference, MASS_1, initial_velocity,.0,.0,
    reference, MASS_1, null,
    accelerations, no;
end: nodes;

begin: elements;
  joint: GROUND,
    clamp,
    GROUND,
    node,
    node;
  joint: SPRING_1,
    rod,
      GROUND,
        position, reference, GROUND, null,
      MASS_1,
        position, reference, MASS_1, null,
      initial_length,
      linear viscoelastic,
        K*initial_length,
        C*initial_length;

  joint: 2, total joint,
		GROUND,
			position, null,
			position orientation, reference, global, eye,
			rotation orientation, reference, global, eye,
		MASS_1,
			position, null,
			position orientation, reference, global, eye,
			rotation orientation, reference, global, eye,
		position constraint, 0, 1, 1, null,
		orientation constraint, 1, 1, 1, null,
			# output, yes;
			output, no;

  body: MASS_1, MASS_1,
    mass,
    null,
    diag, 1.0, 1.0, 1.0;

  module load: "libmodule-chrono-interface";
  user defined: SPRING_1, ChronoInterface,
                coupling,tight,7,
                tolerance, 0.001, # just coupling, none, coupling, tight
                motor type, setpoint,#spline,#
                length scale, 1000.0,
                mass scale, 1.0,# length scale, force scale...
                nodes number, 1, # nodes number, 1,
                MASS_1, offset, null, 1, output, yes,
                ground, 0,
                position, 1.0,0.0,0.0,
                orientation, eye,
                verbose, yes;

  gravity: uniform, 0., -1., 0.,
                    const, 9.81;
end: elements;

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 1
##############################################################################################################

# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2023
# 
# Pierangelo Masarati	<pierangelo.masarati@polimi.it>
# Paolo Mantegazza	<paolo.mantegazza@polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# 
#	Diode test
#
#	Model based on http://en.wikipedia.org/wiki/Diode
#
#   Library of electric components for "digital fabrication" machines (alpha version) [2013]
#   Eduardo Okabe (okabe@unicamp.br)
#   Postdoc CNPq at Aero/Polimi
#

begin: data;
	problem: initial value;
end: data;


begin: initial value;
	initial time: 0.;
	final time: 2;
	time step: 1.e-3;

	tolerance: 1.e-10;
	max iterations: 10;

	derivatives coefficient: 1.e-12;
	derivatives tolerance: 1.e-3;
	derivatives max iterations: 10;

	output: iterations;
	output: residual;
end: initial value;


begin: control data;
	loadable elements: 1;
   	electric nodes: 2;
   	genels: 2;
   	default output: all;
end: control data;

begin: nodes;
	# node ground:
	electric: 0,
		value, 0., output, yes;    
      
	# node source:
	electric: 1,
		value, 0., output, yes;    
end: nodes;

begin: elements;
	genel: 0, clamp, 
		0, electric, algebraic, 
		0.;      
	  
	genel: 1, clamp, 
		1, electric, algebraic, 
		piecewise linear, 3, 0., 0., 0.5, -100., 2., 0.7;      
		   
	module load: "libmodule-fab-electric";
	user defined: 1, diode, 
		1,             # node of source 
		0,             # ground node 
		6.2229e-9,     # saturation current IS 
		1.9224,        # ideality factor N 
		0.25951,       # breakdown current IBV 
		100.14,        # breakdown voltage BV
		4.9950,        # reverse ideality factor NR
		output, yes;   # enable output of constraint moments and actual angles
	
	# data output (diode.usr):
	#
	# column 1: label element (1)
	# column 2: current
	# column 3: voltage node 1 (source)
	# column 4: voltage node 2 (ground)
	
end: elements;

# vim:ft=mbd

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/tests/beam/beig,v 1.5 2014/12/13 17:15:35 masarati Exp $

begin: data;
    problem: initial value;
end: data;

begin: initial value;
    set: real dt = 1.e-4;
    time step: dt;
    initial time: 0.;
    final time: 10000*dt;
    
    method: ms, .6;
    # method: crank nicholson;
    
    max iterations: 100;
    tolerance: 1.e-8;

    derivatives coefficient: 1.e-6;
    derivatives max iterations: 1;
    derivatives tolerance: 1.e-12;

    fictitious steps number: 0;
    # linear solver: y12;
    # linear solver: superlu, cc, mt, 2;
    # interface solver: y12, workspace size, 3200000;
    # interface solver: lapack;
    # interface solver: umfpack;
    # interface solver: naive, colamd;
    linear solver: naive, colamd, mt, 1;
    # linear solver: lapack;
    # linear solver: umfpack;
    # linear solver: umfpack, cc, block size, 2;
    # linear solver: umfpack, dir, block size, 2;
    # linear solver: naive, colamd, pivot factor, 1e-10;
    # threads: disable;

    nonlinear solver: newton raphson, modified, 4;
    /*
    nonlinear solver: matrix free, gmres,
	tolerance, 1.e-5,
	steps, 20,
	tau, 1.e-3,
	# eta, 1.e-2,
	preconditioner, full jacobian, steps, 30;
    */

    eigenanalysis:
	# .001,
	1.1,
	parameter, 1.e-6, output matrices;
threads: disable;
end: initial value;

begin: control data;
    set: integer nb = 4;
    
    #output results: adams, velocity, no, acceleration, yes;
    output results: netcdf;
    default orientation: orientation vector;
    #default orientation: orientation matrix;
    
    #default output: none;
    structural nodes: 1 + 1 + 2*nb;
    joints: 3;
    forces: 1;
    rigid bodies: 3*nb;
    beams: nb;
    
    print: dof description;
end: control data;

set: integer beam = 1;
reference: beam,
	null,
	eye,
	null,
	null;

begin: nodes;
    set: real l = 1.;
    set: real dl = l/(2.*nb);
    set: real dle = (1. - 1./sqrt(3.))*dl;
    set: real dli = 1./sqrt(3.)*2.*dl;

    set: real m = 1.;
    set: real dm = m/(2.*nb);
    set: real dme = (1. - 1./sqrt(3.))*dm;
    set: real dmi = 1./sqrt(3.)*2.*dm;
    set: real j = 1.e-4;
    set: real dj = j/(2.*nb);
    set: real dje = (1. - 1./sqrt(3.))*dj;
    set: real dji = 1./sqrt(3.)*2.*dj;
	   
    set: real EA = 1e6;
    set: real GAy = 1e6;
    set: real GAz = 1e6;
    set: real GJ = 1e3;
    set: real EJy = 1e3;
    set: real EJz = 1e3;

    set: real Fcrit = pi^2*EJy/l^2;
    set: real Faxial = 1.; # .0*Fcrit;

    remark: "Fcrit ", Fcrit;
    remark: "Faxial", Faxial;
	 
    structural: 1, dynamic,
                null,
		eye,
		null,
		null;
    set: integer curr_label = 2;
    include: "b.nod";
    set: curr_label = 4;
    include: "b.nod";    
    set: curr_label = 6;
    include: "b.nod";    
    set: curr_label = 8;
    include: "b.nod";    
/*
    set: curr_label = 10;
    include: "b.nod";    
    set: curr_label = 12;
    include: "b.nod";    
    set: curr_label = 14;
    include: "b.nod";    
    set: curr_label = 16;
    include: "b.nod";    
    set: curr_label = 18;
    include: "b.nod";    
    set: curr_label = 20;
    include: "b.nod";
*/
    structural: 1000, static,
                null,
		eye,
		null,
		null;

    output: structural, 2*nb + 1;
end: nodes;

begin: elements;
    joint: 1, clamp, 1000, node, node;

    joint: 2, inline,
    	1000,
    	  null,
	  reference, global,
	  3, 1., 0., 0.,
	  2, 0., 1., 0.,
	2*nb + 1;
    joint: 3, revolute pin,
    	1,
    	  null,
	  hinge, reference, global,
	  1, 1., 0., 0.,
	  3, 0., -1., 0.,
	  null,
	  hinge, reference, global,
	  1, 1., 0., 0.,
	  3, 0., -1., 0.;
    /*force: 1, conservative, 
           # 2*nb+1, 1.,0.,0., null,
           2*nb+1, 0.,0.,1., null,
	   step, 10.*dt, 1.e3, 0.;*/
    /*couple: 1, conservative,
           1, 0.,1.,0.,
	   step, 10.*dt, 1, 0.;*/
    /*
    force: 1, absolute, 2*nb + 1,
		reference, node, 1., 0., 0.,
		null,
		cosine, .01,pi/1,-Faxial/2.,half,0.; */
    force: 1, absolute, nb + 1,
		reference, node, 0., 0., 1.,
		null,
		#random, 1.e1, 0., .01, forever, steps, 10;
		sine, .001, pi/.001, 1.e1, one, 0.;
   
    set: curr_label = 0;

    set: curr_label = 2;
    include: "b2.elm";
    set: curr_label = 4;
    include: "b2.elm";
    set: curr_label = 6;
    include: "b2.elm";
    set: curr_label = 8;
    include: "b2.elm";
/*
    set: curr_label = 10;
    include: "b2.elm";
    set: curr_label = 12;
    include: "b2.elm";
    set: curr_label = 14;
    include: "b2.elm";
    set: curr_label = 16;
    include: "b2.elm";
    set: curr_label = 18;
    include: "b2.elm";
    set: curr_label = 20;
    include: "b2.elm";
*/
end: elements;

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/tests/benchmarks/lateralbuckling/lateralbuckling,v 1.9 2017/01/12 14:59:34 masarati Exp $
#
# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2021
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

begin: data;
	problem: initial value;
end: data;

include: "lateralbuckling.set";

begin: initial value;
	initial time: 0.;
	final time: 2.*T;
	# final time: 4.*T;
	# time step: 1e-3;
	# time step: 2e-3;
	# time step: T/400;
	time step: T/800;

	# method: ms, .6;
	# method: ms, 1./3.;
	method: bdf;
	tolerance: 1e-4;
	max iterations: 50;

	linear solver: naive, colamd;
	# linear solver: umfpack, cc;
	# nonlinear solver: newton raphson, modified, 5;

	output: iterations;
	# output: residual;
	# output: solution;
threads: disable;
end: initial value;

begin: control data;
	# model: static;
	# default orientation: orientation vector;
	default orientation: orientation matrix;
	default output: reference frames;

	structural nodes: N_BEAM_NODES;
	rigid bodies: N_BEAM_NODES;
	beams: N_BEAMS;
	joints: 4;

	# static buckling; does not work with modified Newton-Raphson
	# model: static;
end: control data;

include: "lateralbuckling.ref";

begin: nodes;
	include: "lateralbuckling.nod";
end: nodes;

begin: elements;
	joint: POINT_R, clamp, BEAM_POINT_R, node, node;

	joint: POINT_C, spherical hinge,
		BEAM_POINT_T,
			position, reference, POINT_C, null,
		LINK_POINT_C,
			position, reference, POINT_C, null;

	joint: POINT_B, revolute hinge,
		LINK_POINT_B,
			position, reference, POINT_B, null,
			orientation, reference, POINT_B, 3, 0., 1., 0., 1, 1., 0., 0.,
		CRANK_POINT_B,
			position, reference, POINT_B, null,
			orientation, reference, POINT_B, 3, 0., 1., 0., 1, 1., 0., 0.;

	joint: POINT_G, total pin joint,
		CRANK_POINT_G,
			position, reference, POINT_G, null,
			position orientation, reference, POINT_G, eye,
			rotation orientation, reference, POINT_G, eye,
		position, reference, POINT_G, null,
		position orientation, reference, POINT_G, eye,
		rotation orientation, reference, POINT_G, eye,
		position constraint, 1, 1, 1, null,
		orientation constraint, 1, 1, 1,
			0., -1., 0., cosine, 0., pi/T, pi/2, half, 0.;

	include: "lateralbuckling.elm";
end: elements;

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/tests/drives/element/swashplate,v 1.7 2017/01/12 15:01:25 masarati Exp $
#
# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2017
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# 
begin: data;
	integrator: initial value;
end: data;

begin: initial value;
	initial time: 0.;
	final time: 1.;
	time step: 1.e-2;

	max iterations: 20;
	tolerance: 1e-6;

	output: iterations;
	# output: residual;
threads: disable;
end: initial value;

begin: control data;
	structural nodes:
		+1	# ground
		+1	# hub
		+1	# blade
	;
	joints:
		+1	# clamp
		+1	# hub rotation
		+1	# blade pitch
	;
	file drivers:
		+1	# imposed controls
	;
end: control data;

begin: nodes;
	structural: 1, static,
		null, eye, null, null;
	structural: 2, static,
		null, eye, null, null;
	structural: 3, static,
		1., 0., 0., eye, null, null;
end: nodes;

begin: drivers;
	file: 1, fixed step,
		count,
		3,
		0.,
		1.e-2,
		pad zeros, no,
		"swashplate-controls.drv";
end: drivers;

set: integer COLLECTIVE = 1;
set: integer FORE_AFT = 2;
set: integer LATERAL = 3;
drive caller: COLLECTIVE, file, 1, 1;
drive caller: FORE_AFT, file, 1, 2;
drive caller: LATERAL, file, 1, 3;

begin: elements;
	joint: 1, clamp, 1, node, node;
	joint: 2, axial rotation,
		1,
			position, reference, node, null,
			orientation, reference, node, eye,
		2,
			position, reference, node, null,
			orientation, reference, node, eye,
		cosine, 0., pi/.2, 2*pi*4/2, half, 0.;
	joint: 3, total joint,
		3,
			position, reference, node, null,
			position orientation, reference, node, eye,
			rotation orientation, reference, node, eye,
		2,
			position, reference, other node, null,
			position orientation, reference, other node, eye,
			rotation orientation, reference, other node, eye,
		position constraint, active, active, active,
			null,
		orientation constraint, active, active, active,
			1., 0., 0.,
			element, 2, joint, string, "rz",
				string, "(model::drive(COLLECTIVE, Time) + model::drive(FORE_AFT, Time)*cos(Var) + model::drive(LATERAL, Time)*sin(Var))*deg2rad";
end: elements;

# vim:ft=mbd

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

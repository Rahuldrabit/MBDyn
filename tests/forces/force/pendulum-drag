# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/tests/forces/force/pendulum-drag,v 1.6 2017/01/12 15:02:06 masarati Exp $
# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2017
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# 
# Author: Pierangelo Masarati <masarati@aero.polimi.it>
#
# Pendulum subjected to "aerodynamic" drag

begin: data;
	problem: initial value;
end: data;

begin: initial value;
	initial time: 0.;
	final time: 10.;
	time step: 1e-2;

	tolerance: 1e-9;
	max iterations: 10;

	#derivatives tolerance: 10;
	#derivatives max iterations: 10;
	#derivatives coefficient: 1.e-6;

	threads: disable;

	output: counter;
	# output: iterations;
	# output: residual;
threads: disable;
end: initial value;

begin: control data;
	structural nodes:
		+1	# pendulum
	;
	joints:
		+1	# pendulum hinge
	;
	rigid bodies:
		+1	# pendulum mass
	;
	forces:
		+1	# drag
	;
	gravity;
end: control data;

set: real L = 1.;
set: real OMEGA = 1.;

begin: nodes;
	structural: 1, dynamic,
		0., 0., -L,
		eye,
		OMEGA*L, 0., 0.,
		0., -OMEGA, 0.;
end: nodes;

begin: elements;
	joint: 1, revolute pin,
		1,
			position, reference, global, null,
			orientation, reference, global,
				3, 0., 1., 0.,
				1, 1., 0., 0.,
		position, reference, global, null,
		orientation, reference, global,
			3, 0., 1., 0.,
			1, 1., 0., 0.;

	body: 1, 1,
		1.,
		null,
		null;

	set: const integer DRAG_LABEL = 1;
	set: const integer NODE_LABEL = 1;
	set: real RHO = 1.225;
	set: real A = 1.;
	set: real CF = 1.;
	set: real D = .5*RHO*A*CF;
	force: DRAG_LABEL, absolute,
		NODE_LABEL,
			position, null,
		component,
			string, "-D*model::xvelocity(NODE_LABEL)*model::velocity(NODE_LABEL)",
			string, "-D*model::yvelocity(NODE_LABEL)*model::velocity(NODE_LABEL)",
			string, "-D*model::zvelocity(NODE_LABEL)*model::velocity(NODE_LABEL)";

	gravity: 0., 0., -1., 9.81;
end: elements;

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

% MBDyn (C) is a multibody analysis code. 
% http://www.mbdyn.org
% 
% Copyright (C) 1996-2017
% 
% Pierangelo Masarati	<masarati@aero.polimi.it>
% Paolo Mantegazza	<mantegazza@aero.polimi.it>
% 
% Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
% via La Masa, 34 - 20156 Milano, Italy
% http://www.aero.polimi.it
% 
% Changing this copyright notice is forbidden.
% 
% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation (version 2 of the License).
% 
% 
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
% 
% You should have received a copy of the GNU General Public License
% along with this program; if not, write to the Free Software
% Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
%
% Author: Pierangelo Masarati <masarati@aero.polimi.it>

fout = fopen('simplerotor_blade_m.set', 'w');

fprintf(fout, '# MBDyn (C) is a multibody analysis code. \n');
fprintf(fout, '# http://www.mbdyn.org\n');
fprintf(fout, '# \n');
fprintf(fout, '# Copyright (C) 1996-2017\n');
fprintf(fout, '# \n');
fprintf(fout, '# Pierangelo Masarati	<masarati@aero.polimi.it>\n');
fprintf(fout, '# Paolo Mantegazza	<mantegazza@aero.polimi.it>\n');
fprintf(fout, '# \n');
fprintf(fout, '# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano\n');
fprintf(fout, '# via La Masa, 34 - 20156 Milano, Italy\n');
fprintf(fout, '# http://www.aero.polimi.it\n');
fprintf(fout, '# \n');
fprintf(fout, '# Changing this copyright notice is forbidden.\n');
fprintf(fout, '# \n');
fprintf(fout, '# This program is free software; you can redistribute it and/or modify\n');
fprintf(fout, '# it under the terms of the GNU General Public License as published by\n');
fprintf(fout, '# the Free Software Foundation (version 2 of the License).\n');
fprintf(fout, '# \n');
fprintf(fout, '# \n');
fprintf(fout, '# This program is distributed in the hope that it will be useful,\n');
fprintf(fout, '# but WITHOUT ANY WARRANTY; without even the implied warranty of\n');
fprintf(fout, '# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n');
fprintf(fout, '# GNU General Public License for more details.\n');
fprintf(fout, '# \n');
fprintf(fout, '# You should have received a copy of the GNU General Public License\n');
fprintf(fout, '# along with this program; if not, write to the Free Software\n');
fprintf(fout, '# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n');
fprintf(fout, '#\n');
fprintf(fout, '# Author: Pierangelo Masarati <masarati@aero.polimi.it>\n');
fprintf(fout, '#\n');
fprintf(fout, '# GENERATED BY "simplerotor_blade.m" --- DO NOT EDIT\n');
fprintf(fout, '\n');

BLADE_RADIUS = 5.;
BLADE_CHORD = .5;	% stub rotor

BLADE_CUTOUT = .05*BLADE_RADIUS;
BLADE_NNODES = 20;

BLADE_MASS = 50.;
BLADE_JP = .4;

% with these, the rotor flutters
%BLADE_EA = 1e8;
%BLADE_GAY = 1e7;
%BLADE_GAZ = 1e6;
%BLADE_GJ = 1e4;
%BLADE_EJY = 1e5;
%BLADE_EJZ = 1e6;

% with these, the rotor is stable
BLADE_EA = 1e9;
BLADE_GAY = 1e8;
BLADE_GAZ = 1e8;
BLADE_GJ = 1e6;
BLADE_EJY = 9.2e5;
BLADE_EJZ = 9e6;

BLADE_DAMP = 1e-3;

fprintf(fout, 'set: const integer BLADE_NNODES = %d;\n', BLADE_NNODES);
fprintf(fout, 'set: const integer BLADE_NBODIES = %d;\n', BLADE_NNODES);
fprintf(fout, 'set: const integer BLADE_NBEAMS = %d;\n', BLADE_NNODES - 1);
fprintf(fout, 'set: const integer BLADE_NAEROBEAMS = %d;\n', BLADE_NNODES - 2);
fprintf(fout, '\n');
fprintf(fout, 'set: const integer BLADE_1 = 10000;\n');
fprintf(fout, 'set: const integer BLADE_2 = 20000;\n');
fprintf(fout, '\n');
fprintf(fout, 'set: integer CURR_BLADE;\n');
fprintf(fout, '\n');
fprintf(fout, 'set: const real BLADE_RADIUS = %+16.8e;\n', BLADE_RADIUS);
fprintf(fout, 'set: const real BLADE_CUTOUT = %+16.8e;\n', BLADE_CUTOUT);
fprintf(fout, '\n');
fprintf(fout, 'set: const real BLADE_MASS = %+16.8e;\n', BLADE_MASS);
fprintf(fout, 'set: const real BLADE_JP = %+16.8e;\n', BLADE_JP);
fprintf(fout, '\n');
fprintf(fout, 'set: const real BLADE_EA = %+16.8e;\n', BLADE_EA);
fprintf(fout, 'set: const real BLADE_GAY = %+16.8e;\n', BLADE_GAY);
fprintf(fout, 'set: const real BLADE_GAZ = %+16.8e;\n', BLADE_GAZ);
fprintf(fout, 'set: const real BLADE_GJ = %+16.8e;\n', BLADE_GJ);
fprintf(fout, 'set: const real BLADE_EJY = %+16.8e;\n', BLADE_EJY);
fprintf(fout, 'set: const real BLADE_EJZ = %+16.8e;\n', BLADE_EJZ);
fprintf(fout, '\n');
fprintf(fout, 'set: const real BLADE_DAMP = %+16.8e;\n', BLADE_DAMP);
fprintf(fout, '\n');
fprintf(fout, 'set: const real BLADE_CHORD = %+16.8e;\n', BLADE_CHORD);
fprintf(fout, 'set: integer BLADE_INTEGRATION_POINTS = %d;\n', 2);
fprintf(fout, '\n');
fprintf(fout, 'set: const real BLADE_DR = (BLADE_RADIUS - BLADE_CUTOUT)/(BLADE_NNODES - 1);\n');
fprintf(fout, 'set: const real BLADE_DM = BLADE_MASS/(BLADE_NNODES - 1);\n');
fprintf(fout, 'set: const real BLADE_DJP = BLADE_JP/(BLADE_NNODES - 1);\n');
fprintf(fout, '\n');
fprintf(fout, 'set: real BLADE_COLLECTIVE = %+16.8e;\n', 0.);
fprintf(fout, 'set: real OMEGA = %+16.8e;\n', 0.);

fprintf(fout, '# vim%s\n', ':ft=mbd');
fclose(fout);


fout = fopen('simplerotor_blade_m.ref', 'w');

fprintf(fout, '# MBDyn (C) is a multibody analysis code. \n');
fprintf(fout, '# http://www.mbdyn.org\n');
fprintf(fout, '# \n');
fprintf(fout, '# Copyright (C) 1996-2017\n');
fprintf(fout, '# \n');
fprintf(fout, '# Pierangelo Masarati	<masarati@aero.polimi.it>\n');
fprintf(fout, '# Paolo Mantegazza	<mantegazza@aero.polimi.it>\n');
fprintf(fout, '# \n');
fprintf(fout, '# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano\n');
fprintf(fout, '# via La Masa, 34 - 20156 Milano, Italy\n');
fprintf(fout, '# http://www.aero.polimi.it\n');
fprintf(fout, '# \n');
fprintf(fout, '# Changing this copyright notice is forbidden.\n');
fprintf(fout, '# \n');
fprintf(fout, '# This program is free software; you can redistribute it and/or modify\n');
fprintf(fout, '# it under the terms of the GNU General Public License as published by\n');
fprintf(fout, '# the Free Software Foundation (version 2 of the License).\n');
fprintf(fout, '# \n');
fprintf(fout, '# \n');
fprintf(fout, '# This program is distributed in the hope that it will be useful,\n');
fprintf(fout, '# but WITHOUT ANY WARRANTY; without even the implied warranty of\n');
fprintf(fout, '# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n');
fprintf(fout, '# GNU General Public License for more details.\n');
fprintf(fout, '# \n');
fprintf(fout, '# You should have received a copy of the GNU General Public License\n');
fprintf(fout, '# along with this program; if not, write to the Free Software\n');
fprintf(fout, '# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n');
fprintf(fout, '#\n');
fprintf(fout, '# Author: Pierangelo Masarati <masarati@aero.polimi.it>\n');
fprintf(fout, '#\n');
fprintf(fout, '# GENERATED BY "simplerotor_blade.m" --- DO NOT EDIT\n');
fprintf(fout, '\n');

fprintf(fout, 'reference: CURR_BLADE + 1,\n');
fprintf(fout, '        reference, HUB, null,\n');
fprintf(fout, '        reference, HUB,\n');
fprintf(fout, '                3, 0., 0., 1.,\n');
fprintf(fout, '                2,\n');
fprintf(fout, '                        -sin((CURR_BLADE/BLADE_1 - 1)*pi),\n');
fprintf(fout, '                        cos((CURR_BLADE/BLADE_1 - 1)*pi),\n');
fprintf(fout, '                        0.,\n');
fprintf(fout, '        reference, HUB, null,\n');
fprintf(fout, '        reference, HUB, null;\n');
fprintf(fout, '\n');

fprintf(fout, 'reference: CURR_BLADE + 2,\n');
fprintf(fout, '        reference, CURR_BLADE + 1, 0., BLADE_CUTOUT, 0.,\n');
fprintf(fout, '        reference, CURR_BLADE + 1, eye,\n');
fprintf(fout, '        reference, CURR_BLADE + 1, null,\n');
fprintf(fout, '        reference, CURR_BLADE + 1, null;\n');
fprintf(fout, '\n');

fprintf(fout, 'reference: CURR_BLADE,\n');
fprintf(fout, '        reference, CURR_BLADE + 2, null,\n');
fprintf(fout, '        reference, CURR_BLADE + 2,\n');
fprintf(fout, '                2, 0., 1., 0.,\n');
fprintf(fout, '                1, cos(BLADE_COLLECTIVE), 0., -sin(BLADE_COLLECTIVE),\n');
fprintf(fout, '        reference, CURR_BLADE + 2, null,\n');
fprintf(fout, '        reference, CURR_BLADE + 2, null;\n');
fprintf(fout, '\n');

fprintf(fout, '# vim%s\n', ':ft=mbd');
fclose(fout);


fout = fopen('simplerotor_blade_m.nod', 'w');

fprintf(fout, '# MBDyn (C) is a multibody analysis code. \n');
fprintf(fout, '# http://www.mbdyn.org\n');
fprintf(fout, '# \n');
fprintf(fout, '# Copyright (C) 1996-2017\n');
fprintf(fout, '# \n');
fprintf(fout, '# Pierangelo Masarati	<masarati@aero.polimi.it>\n');
fprintf(fout, '# Paolo Mantegazza	<mantegazza@aero.polimi.it>\n');
fprintf(fout, '# \n');
fprintf(fout, '# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano\n');
fprintf(fout, '# via La Masa, 34 - 20156 Milano, Italy\n');
fprintf(fout, '# http://www.aero.polimi.it\n');
fprintf(fout, '# \n');
fprintf(fout, '# Changing this copyright notice is forbidden.\n');
fprintf(fout, '# \n');
fprintf(fout, '# This program is free software; you can redistribute it and/or modify\n');
fprintf(fout, '# it under the terms of the GNU General Public License as published by\n');
fprintf(fout, '# the Free Software Foundation (version 2 of the License).\n');
fprintf(fout, '# \n');
fprintf(fout, '# \n');
fprintf(fout, '# This program is distributed in the hope that it will be useful,\n');
fprintf(fout, '# but WITHOUT ANY WARRANTY; without even the implied warranty of\n');
fprintf(fout, '# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n');
fprintf(fout, '# GNU General Public License for more details.\n');
fprintf(fout, '# \n');
fprintf(fout, '# You should have received a copy of the GNU General Public License\n');
fprintf(fout, '# along with this program; if not, write to the Free Software\n');
fprintf(fout, '# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n');
fprintf(fout, '#\n');
fprintf(fout, '# Author: Pierangelo Masarati <masarati@aero.polimi.it>\n');
fprintf(fout, '#\n');
fprintf(fout, '# GENERATED BY "simplerotor_blade.m" --- DO NOT EDIT\n');
fprintf(fout, '\n');

for n = 1:BLADE_NNODES,
	fprintf(fout, 'structural: CURR_BLADE + %d, dynamic,\n', n);
	fprintf(fout, '        reference, CURR_BLADE, 0., %d*BLADE_DR, 0.,\n', n - 1);
	fprintf(fout, '        reference, CURR_BLADE, eye,\n');
	fprintf(fout, '        reference, CURR_BLADE, null,\n');
	fprintf(fout, '        reference, CURR_BLADE, null;\n');
	fprintf(fout, '\n');
end

fprintf(fout, '# vim%s\n', ':ft=mbd');
fclose(fout);


fout = fopen('simplerotor_blade_m.elm', 'w');

fprintf(fout, '# MBDyn (C) is a multibody analysis code. \n');
fprintf(fout, '# http://www.mbdyn.org\n');
fprintf(fout, '# \n');
fprintf(fout, '# Copyright (C) 1996-2017\n');
fprintf(fout, '# \n');
fprintf(fout, '# Pierangelo Masarati	<masarati@aero.polimi.it>\n');
fprintf(fout, '# Paolo Mantegazza	<mantegazza@aero.polimi.it>\n');
fprintf(fout, '# \n');
fprintf(fout, '# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano\n');
fprintf(fout, '# via La Masa, 34 - 20156 Milano, Italy\n');
fprintf(fout, '# http://www.aero.polimi.it\n');
fprintf(fout, '# \n');
fprintf(fout, '# Changing this copyright notice is forbidden.\n');
fprintf(fout, '# \n');
fprintf(fout, '# This program is free software; you can redistribute it and/or modify\n');
fprintf(fout, '# it under the terms of the GNU General Public License as published by\n');
fprintf(fout, '# the Free Software Foundation (version 2 of the License).\n');
fprintf(fout, '# \n');
fprintf(fout, '# \n');
fprintf(fout, '# This program is distributed in the hope that it will be useful,\n');
fprintf(fout, '# but WITHOUT ANY WARRANTY; without even the implied warranty of\n');
fprintf(fout, '# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n');
fprintf(fout, '# GNU General Public License for more details.\n');
fprintf(fout, '# \n');
fprintf(fout, '# You should have received a copy of the GNU General Public License\n');
fprintf(fout, '# along with this program; if not, write to the Free Software\n');
fprintf(fout, '# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n');
fprintf(fout, '#\n');
fprintf(fout, '# Author: Pierangelo Masarati <masarati@aero.polimi.it>\n');
fprintf(fout, '#\n');
fprintf(fout, '# GENERATED BY "simplerotor_blade.m" --- DO NOT EDIT\n');
fprintf(fout, '\n');

fprintf(fout, 'joint: CURR_BLADE, total joint,\n');
fprintf(fout, '        HUB,\n');
fprintf(fout, '                position, reference, CURR_BLADE + 2, null,\n');
fprintf(fout, '                position orientation, reference, CURR_BLADE + 2, eye,\n');
fprintf(fout, '                rotation orientation, reference, CURR_BLADE + 2, eye,\n');
fprintf(fout, '        CURR_BLADE + 1,\n');
fprintf(fout, '                position, reference, CURR_BLADE, null,\n');
fprintf(fout, '                position orientation, reference, CURR_BLADE, eye,\n');
fprintf(fout, '                rotation orientation, reference, CURR_BLADE, eye,\n');
fprintf(fout, '        position constraint, active, active, active, null,\n');
fprintf(fout, '        orientation constraint, active, active, active,\n');
fprintf(fout, '                0., 1., 0.,\n');
fprintf(fout, '                const, BLADE_COLLECTIVE;\n');
fprintf(fout, '\n');

for b = 1:BLADE_NNODES,
	fprintf(fout, 'body: CURR_BLADE + %d, CURR_BLADE + %d,\n', b, b);
	if (b == 1),
		fprintf(fout, '        BLADE_DM/2,\n');
		fprintf(fout, '        reference, node, 0., BLADE_DR/4, 0.,\n');
		fprintf(fout, '        diag, (BLADE_DM/2)*(BLADE_DR/2)^2/12, BLADE_JP/2, (BLADE_DM/2)*(BLADE_DR/2)^2/12;\n');
	elseif (b == BLADE_NNODES),
		fprintf(fout, '        BLADE_DM/2,\n');
		fprintf(fout, '        reference, node, 0., -BLADE_DR/4, 0.,\n');
		fprintf(fout, '        diag, (BLADE_DM/2)*(BLADE_DR/2)^2/12, BLADE_JP/2, (BLADE_DM/2)*(BLADE_DR/2)^2/12;\n');
	else
		fprintf(fout, '        BLADE_DM,\n');
		fprintf(fout, '        reference, node, null,\n');
		fprintf(fout, '        diag, BLADE_DM*BLADE_DR^2/12, BLADE_JP, BLADE_DM*BLADE_DR^2/12;\n');
	end
	fprintf(fout, '\n');
end

for b = 1:BLADE_NNODES - 1,
	fprintf(fout, 'beam2: CURR_BLADE + %d,\n', b);
	fprintf(fout, '        CURR_BLADE + %d, null,\n', b);
	fprintf(fout, '        CURR_BLADE + %d, null,\n', b + 1);
	fprintf(fout, '        reference, CURR_BLADE,\n');
	fprintf(fout, '                1, 0., 1., 0.,\n');
	fprintf(fout, '                3, 0., 0., 1.,\n');
	fprintf(fout, '        linear viscoelastic generic, diag,\n');
	fprintf(fout, '                BLADE_EA,\n');
	fprintf(fout, '                1/(1/BLADE_GAY + BLADE_DR^2/(12*BLADE_EJZ)),\n');
	fprintf(fout, '                1/(1/BLADE_GAZ + BLADE_DR^2/(12*BLADE_EJY)),\n');
	fprintf(fout, '                BLADE_GJ,\n');
	fprintf(fout, '                BLADE_EJY,\n');
	fprintf(fout, '                BLADE_EJZ,\n');
	fprintf(fout, '        proportional, BLADE_DAMP;\n');
	fprintf(fout, '\n');
end

fprintf(fout, '# vim%s\n', ':ft=mbd');
fclose(fout);


fout = fopen('simplerotor_blade_aero_m.elm', 'w');

fprintf(fout, '# MBDyn (C) is a multibody analysis code. \n');
fprintf(fout, '# http://www.mbdyn.org\n');
fprintf(fout, '# \n');
fprintf(fout, '# Copyright (C) 1996-2017\n');
fprintf(fout, '# \n');
fprintf(fout, '# Pierangelo Masarati	<masarati@aero.polimi.it>\n');
fprintf(fout, '# Paolo Mantegazza	<mantegazza@aero.polimi.it>\n');
fprintf(fout, '# \n');
fprintf(fout, '# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano\n');
fprintf(fout, '# via La Masa, 34 - 20156 Milano, Italy\n');
fprintf(fout, '# http://www.aero.polimi.it\n');
fprintf(fout, '# \n');
fprintf(fout, '# Changing this copyright notice is forbidden.\n');
fprintf(fout, '# \n');
fprintf(fout, '# This program is free software; you can redistribute it and/or modify\n');
fprintf(fout, '# it under the terms of the GNU General Public License as published by\n');
fprintf(fout, '# the Free Software Foundation (version 2 of the License).\n');
fprintf(fout, '# \n');
fprintf(fout, '# \n');
fprintf(fout, '# This program is distributed in the hope that it will be useful,\n');
fprintf(fout, '# but WITHOUT ANY WARRANTY; without even the implied warranty of\n');
fprintf(fout, '# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n');
fprintf(fout, '# GNU General Public License for more details.\n');
fprintf(fout, '# \n');
fprintf(fout, '# You should have received a copy of the GNU General Public License\n');
fprintf(fout, '# along with this program; if not, write to the Free Software\n');
fprintf(fout, '# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n');
fprintf(fout, '#\n');
fprintf(fout, '# Author: Pierangelo Masarati <masarati@aero.polimi.it>\n');
fprintf(fout, '#\n');
fprintf(fout, '# GENERATED BY "simplerotor_blade.m" --- DO NOT EDIT\n');
fprintf(fout, '\n');

for b = 2:BLADE_NNODES - 1,
	fprintf(fout, 'aerodynamic beam2: CURR_BLADE + %d, CURR_BLADE + %d,\n', b, b);
	fprintf(fout, '        reference, node, null,\n');
	fprintf(fout, '        reference, node, 1, -1., 0., 0., 3, 0., 1., 0.,\n');
	fprintf(fout, '        reference, node, null,\n');
	fprintf(fout, '        reference, node, 1, -1., 0., 0., 3, 0., 1., 0.,\n');
	fprintf(fout, '        const, BLADE_CHORD,\n');
	fprintf(fout, '        const, 0.,\n');
	fprintf(fout, '        const, 0.,\n');
	fprintf(fout, '        const, 0.,\n');
	fprintf(fout, '        BLADE_INTEGRATION_POINTS,\n');
	fprintf(fout, '        c81, NACA0012;\n');
	fprintf(fout, '\n');
end

fprintf(fout, '# vim%s\n', ':ft=mbd');
fclose(fout);


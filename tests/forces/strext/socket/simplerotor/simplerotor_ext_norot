# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/tests/forces/strext/socket/simplerotor/simplerotor_ext_norot,v 1.7 2017/01/12 15:02:47 masarati Exp $
#
# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2017
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# 
# Author: Pierangelo Masarati <masarati@aero.polimi.it>

begin: data;
	problem: initial value;
end: data;

set: const integer GROUND = 0;
set: const integer HUB = 1000;

include: "simplerotor_blade_m.set";

set: OMEGA = 40.;
set: BLADE_COLLECTIVE = 8.*deg2rad;

set: real DPSI = 0.25*deg2rad;

begin: initial value;
	initial time: 0.;
	final time: 1.;
	#time step: 1e-3;
	time step: DPSI/OMEGA;

	method: ms, .6;
	linear solver: naive, colamd;
	nonlinear solver: newton raphson, modified, 5;

	tolerance: 1e-5;
	max iterations: 50;

	output: iterations;
	# output: residual;
threads: disable;
end: initial value;

begin: control data;
	structural nodes:
		+1				# ground
		+1				# hub
		+2*(
			+BLADE_NNODES		# cantilever blade
		);

	rigid bodies:
		+2*(
			+BLADE_NBODIES		# cantilever blade
		);
	joints:
		+1				# ground clamp
		+1				# rotor motion
		+2*(
			+1			# pitch control
		)
	;
	beams:
		+2*(
			+BLADE_NBEAMS		# cantilever blade
		);
	forces:
		+1				# external aerodynamics
	;
end: control data;

reference: GROUND,
	reference, global, null,
	reference, global, eye,
	reference, global, null,
	reference, global, null;

reference: HUB,
	reference, GROUND, null,
	reference, GROUND, eye,
	reference, GROUND, null,
	reference, GROUND, 0., 0., OMEGA;

set: CURR_BLADE = BLADE_1;
include: "simplerotor_blade_m.ref";
set: CURR_BLADE = BLADE_2;
include: "simplerotor_blade_m.ref";

begin: nodes;
	structural: GROUND, static,
		reference, GROUND, null,
		reference, GROUND, eye,
		reference, GROUND, null,
		reference, GROUND, null;

	structural: HUB, static,
		reference, HUB, null,
		reference, HUB, eye,
		reference, HUB, null,
		reference, HUB, null;

	set: CURR_BLADE = BLADE_1;
	include: "simplerotor_blade_m.nod";
	set: CURR_BLADE = BLADE_2;
	include: "simplerotor_blade_m.nod";
end: nodes;

begin: elements;
	joint: GROUND, clamp, GROUND, node, node;

	joint: HUB, total joint,
		GROUND,
		HUB,
		position constraint, active, active, active, null,
		orientation constraint, active, active, active,
			0., 0., 1., linear, 0., OMEGA;

	set: CURR_BLADE = BLADE_1;
	include: "simplerotor_blade_m.elm";
	set: CURR_BLADE = BLADE_2;
	include: "simplerotor_blade_m.elm";

	force: 0, external structural,
		socket,
		create, yes,
		path, "/tmp/mbdyn.sock",
		no signal,
		coupling,
			# loose,
			tight,
		reference node, HUB,
		orientation, none,
		# orientation, orientation vector,
		# orientation, orientation matrix, # default
		# orientation, euler 123,
		use reference node forces, no,
		2*BLADE_NNODES,
			# blade #1
			BLADE_1 +  1, BLADE_1 +  2, BLADE_1 +  3, BLADE_1 +  4, BLADE_1 +  5,
			BLADE_1 +  6, BLADE_1 +  7, BLADE_1 +  8, BLADE_1 +  9, BLADE_1 + 10,
			BLADE_1 + 11, BLADE_1 + 12, BLADE_1 + 13, BLADE_1 + 14, BLADE_1 + 15,
			BLADE_1 + 16, BLADE_1 + 17, BLADE_1 + 18, BLADE_1 + 19, BLADE_1 + 20,
			# blade #2
			BLADE_2 +  1, BLADE_2 +  2, BLADE_2 +  3, BLADE_2 +  4, BLADE_2 +  5,
			BLADE_2 +  6, BLADE_2 +  7, BLADE_2 +  8, BLADE_2 +  9, BLADE_2 + 10,
			BLADE_2 + 11, BLADE_2 + 12, BLADE_2 + 13, BLADE_2 + 14, BLADE_2 + 15,
			BLADE_2 + 16, BLADE_2 + 17, BLADE_2 + 18, BLADE_2 + 19, BLADE_2 + 20;
end: elements;

# vim:ft=mbd

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

## @MBDYN_SIMPLE_TESTSUITE_EXCLUDE@ = 1

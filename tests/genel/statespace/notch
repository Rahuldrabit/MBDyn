# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/tests/genel/statespace/notch,v 1.6 2014/12/13 17:15:40 masarati Exp $
#
# State-space filter test
# transfer function of notch filter
#
#         s^2 + 2 * d/c * w0 * s + w0^2
# H(s) = -------------------------------
#         s^2 + 2 * 1/c * w0 * s + w0^2

begin: data;
	problem: initial value;
end: data;

begin: initial value;
	initial time: 0.;
	final time: 1.;
	time step: 1e-3;

	tolerance: 1e-6;
	max iterations: 10.;

	method: ms, .6;
threads: disable;
end: initial value;

begin: control data;
	abstract nodes: 5;
	genels: 4;
end: control data;

begin: nodes;
	abstract: 1;
	abstract: 2;
	abstract: 3;

	abstract: 4;
	abstract: 5;
end: nodes;

set: real w0 = 10.*2.*pi;
set: real d = .1;
set: real c = 1.;

begin: elements;
	genel: 1, state space SISO,
		1, abstract, algebraic,
		drive, sine, 0., 10*2*pi, 1., forever, 0.,
		# drive, const, 0.,
		2,
		matrix A,
			-2./c*w0, -(w0^2),
			 1.,  0.,
		matrix B,
			 1.,
			 0.,
		matrix C,
                         2.*(d-1.)/c*w0, 0.,
		matrix D,
			 1.;

	genel: 2, scalar filter,
		2, abstract, algebraic,
		drive, sine, 0., 10*2*pi, 1., forever, 0.,
		# drive, const, 0.,
		canonical form, controllable,
		2, 2./c*w0, w0^2,
		2, 1., 2.*d/c*w0, w0^2;

	genel: 3, scalar filter,
		3, abstract, algebraic,
		drive, sine, 0., 10*2*pi, 1., forever, 0.,
		# drive, const, 0.,
		canonical form, observable,
		2, 2./c*w0, w0^2,
		2, 1., 2.*d/c*w0, w0^2;

	genel: 4, state space MIMO,
		2,
			4, abstract, algebraic,
			5, abstract, algebraic,
		2,
			drive, sine, 0., 10*2*pi, 1., forever, 0.,
			drive, sine, 0., 10*2*pi, 1., forever, 0.,
			# drive, const, 0.,
		4,
		matrix A,
			-2./c*w0, -(w0^2),  0.,       0.,
			 1.,       0.,      0.,       0.,
			 0.,       0.,     -2./c*w0, -(w0^2),
			 0.,       0.,      1.,       0.,
		matrix B,
			 1., 0.,
			 0., 0.,
			 0., 1.,
			 0., 0.,
		matrix C,
                         2.*(d-1.)/c*w0, 0., 0.,             0.,
			 0.,             0., 2.*(d-1.)/c*w0, 0.,
		matrix D,
			 1., 0.,
			 0., 1.;
end: elements;

# vim:ft=mbd

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

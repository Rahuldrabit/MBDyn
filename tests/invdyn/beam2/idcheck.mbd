begin: data;
	problem: inverse dynamics;
end: data;

begin: inverse dynamics;
	problem type: 		underdetermined fully actuated, weights, 0., 0., 1., 0., 1., 0.;
   	initial time:   	0.;
   	final time:   		2.;
	time step:		1.;
   	max iterations: 	100, at most;
   	tolerance:      	1.e-6;
  	# linear solver: 		umfpack;	
  	linear solver: 		naive;
	# output: residual;
	# output: jacobian;
end: inverse dynamics;

#-----------------------------------------------------------------------------------
# [ Control Data Block ]

begin: control data;
	structural nodes: 3;
	# rigid bodies: 2;
	beams:
		+2	# ergonomy
		+2	# rhs
	;
	joints:
		+1	# clamp
		+1	# prescribed motion
		+2	# torque
	;
	default orientation: orientation vector;
end: control data;

reference: 0,
	null,
	eye,
	null,
	null;

begin: nodes;
	structural: 0, static, reference, 0, 0., 0., 0., reference, 0, eye, reference, 0, null, reference, 0, null;
	structural: 1, static, reference, 0, 1., 0., 0., reference, 0, eye, reference, 0, null, reference, 0, null;
	structural: 2, static, reference, 0, 2., 0., 0., reference, 0, eye, reference, 0, null, reference, 0, null;
end: nodes;

constitutive law: 0, 6, linear elastic generic, diag, 1e9, 1./(1./1e8 + 1./(12*1e4)), 1./(1./1e8 + 1./(12*1e4)), 1e4, 1e4, 1e4;
constitutive law: 1, 6, linear viscoelastic generic, diag, 1e9, 1./(1./1e8 + 1./(12*1e4)), 1./(1./1e8 + 1./(12*1e4)), 1e4, 1e4, 1e4, proportional, 0e-4;

begin: elements;
	joint: 0, clamp, 0, node, node;

	/*
	body: 1, 1, 1., null, diag, 1., 1., 1.;
	body: 2, 2, 1., null, diag, 1., 1., 1.;
	*/

	# ergonomy
	beam2: 1,
		0, null,
		1, null,
		reference, 0, eye,
		reference, 0,
		# inverse dynamics, right hand side, no, ergonomy, yes;
		inverse dynamics, right hand side, yes, ergonomy, yes;
	beam2: 2,
		1, null,
		2, null,
		reference, 0, eye,
		reference, 0,
		# inverse dynamics, right hand side, no, ergonomy, yes;
		inverse dynamics, right hand side, yes, ergonomy, yes;

	# right hand side
	beam2: 11,
		0, null,
		1, null,
		reference, 0, eye,
		reference, 0,
		# inverse dynamics, right hand side, yes, ergonomy, no;
		inverse dynamics, right hand side, no, ergonomy, no;
	beam2: 12,
		1, null,
		2, null,
		reference, 0, eye,
		reference, 0,
		# inverse dynamics, right hand side, yes, ergonomy, no;
		inverse dynamics, right hand side, no, ergonomy, no;

	joint: 1, total joint,
		0,
			position, reference, 0, 1., 0., 0.,
			position orientation, reference, 0, eye,
			rotation orientation, reference, 0, eye,
		1,
			position, reference, 0, 1., 0., 0.,
			position orientation, reference, 0, eye,
			rotation orientation, reference, 0, eye,
		position constraint, 1, 1, 1, null, null, null,
		orientation constraint, 1, 1, 1, null, null, null,
		inverse dynamics, torque, yes, prescribed motion, no;

	joint: 2, total joint,
		0,
			position, reference, 0, 2., 0., 0.,
			position orientation, reference, 0, eye,
			rotation orientation, reference, 0, eye,
		2,
			position, reference, 0, 2., 0., 0.,
			position orientation, reference, 0, eye,
			rotation orientation, reference, 0, eye,
		position constraint, 1, 1, 1, null, null, null,
		orientation constraint, 1, 1, 1, null, null, null,
		inverse dynamics, torque, yes, prescribed motion, no;

	joint: 12, total joint,
		0,
			position, reference, 0, 2., 0., 0.,
			position orientation, reference, 0, eye,
			rotation orientation, reference, 0, eye,
		2,
			position, reference, 0, 2., 0., 0.,
			position orientation, reference, 0, eye,
			rotation orientation, reference, 0, eye,
		position constraint, 1, 1, 1,
			component,
				const, 0.,
				const, 0.,
				linear, 0., .02,
			component,
				const, 0.,
				const, 0.,
				const, .02,
			component,
				const, 0.,
				const, 0.,
				const, 0.,
		orientation constraint, 1, 1, 1,
			component,
				const, 0.,
				const, 0.,
				const, 0.,
			component,
				const, 0.,
				const, 0.,
				const, 0.,
			component,
				const, 0.,
				const, 0.,
				const, 0.,
		inverse dynamics, torque, no, prescribed motion, yes;
end: elements;

# vim:ft=mbd

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

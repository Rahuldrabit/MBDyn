# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/tests/joints/modal/floating-frame-beam/floating-frame-beam,v 1.5 2017/01/12 15:04:18 masarati Exp $
#
# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2017
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# 2 flexible rotating beams, each with 6 static shapes
# and the stiffness matrix of the corresponding Euler-Bernoulli element

begin: data;
	problem: initial value;
end: data;

begin: initial value;
	initial time: 0.;
	final time: 1.;
	time step: 1.e-2;

	method: ms, .6;

	tolerance: 1.e-6;
	max iterations: 50;

	derivatives coefficient: 1.e-1;
	derivatives tolerance: 1.e-6;
	derivatives max iterations: 20;

	threads: disable;

	# output: iterations;
	# output: jacobian;
threads: disable;
end: initial value;

begin: control data;
	# skip initial joint assembly;
	structural nodes: 3;
	joints: 3;
	forces: 1;
end: control data;

set: real L = 1;

begin: nodes;
	structural: 1, modal,
		reference, global, null,
		reference, global, eye,
		reference, global, null,
		reference, global, null;
	structural: 2, modal,
		reference, global, L, 0., 0.,
		reference, global, eye,
		reference, global, null,
		reference, global, null;
	structural: 3, static,
		reference, global, 2*L, 0., 0.,
		reference, global, eye,
		reference, global, null,
		reference, global, null;
end: nodes;

begin: elements;
	joint: 0, clamp, 1, node, node;

	joint: 1, modal, 1,
		6,
		from file,
		no damping,
		"beam.fem",
		create binary,
		use binary,
		1,
		"B", 2, null;

	joint: 2, modal, 2,
		6,
		from file,
		no damping,
		"beam.fem",
		use binary,
		1,
		"B", 3, null;

	force: 3, absolute,
		3, position, null,
		0., 0., 1.,
			string, "1.*(Time>.1)";
			# linear, 0., 1.e0;
end: elements;

# vim:ft=mbd

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

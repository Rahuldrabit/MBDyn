# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/tests/joints/plane/planefriction,v 1.3 2014/12/13 17:15:47 masarati Exp $

begin: data;
	problem: initial value;
end: data;

begin: initial value;
	initial time: 0.;
	final time: 12.;
	time step: 1.e-4;
	tolerance: 1e-6;
	derivatives coefficient: 1E-7;
	derivatives max iterations: 10;
	derivatives tolerance: 1e-3;
	max iterations: 10;
	#newton raphson: modified, 1;
	newton raphson: true;
	linear solver: naive, colamd;
	#abort after : derivatives;
	#output: iterations;
	#output: residual;
	#output: residual, jacobian, solution;
threads: disable;
end: initial value;

begin: control data;
	structural nodes: 2;
	parameter nodes: 2;
	rigid bodies: 1;
	joints: 2;
	forces: 2;
	
	# default output: none;
end: control data;

begin: nodes;
	structural: 1, dynamic,
		null,
		eye,
		null,
		null;
	structural: 2, dynamic,
		null,
		eye,
		null,
		0.,0.,10.;
	parameter: 1, element;
	parameter: 2, element;
end: nodes;

scalar function: "constfriction", const, 0.3;

begin: elements;
	joint: 1, clamp, 1, node, node;
	joint: 2, revolute hinge,
		1, reference, node, null,
		hinge, reference, node, eye,
		2, reference, node, null,
		hinge, reference, node, eye
		,
		friction, 0.1,
			preload, 1.,
			modlugre, 2000, 2.8,0.,0.71, "constfriction", 
			#discrete coulomb, "test", const, 1.,
			simple
#			simple plane hinge, 0.1
	;
	bind: 2, joint, 1, string, "rz";
	bind: 2, joint, 2, string, "wz";
	body: 2, 2, 1., null, diag, 1.,1.,.005;
	couple: 2, follower, 2, 0.,0.,1.,
		#const, 3.9999;
		string, "3*sin(70*Time)";
		# array, 2,
		# dof, 1, parameter, string, "-4e-1*Var",
		# dof, 2, parameter, string, "-2e0*Var*(1-exp(-1*Time))";
	force: 3, absolute, 2, position, null, 1.,0.,0., const, 10.;
end: elements;

# vim:ft=mbd

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

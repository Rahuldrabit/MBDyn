# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/tests/joints/total/total_err,v 1.6 2017/01/12 15:05:22 masarati Exp $
# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2017
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# 
# revolute with prescribed rotation, modeled using:
# - total (angle)
# - total (angular velocity)
# - axial rotation
# in the first case, the angle is correct but the angular velocity is "wrong";
# in the other cases, the angular velocity is correct but the angle is "wrong".

begin: data;
	problem: initial value;
end: data;

begin: initial value;
	initial time: 0.;
	final time: 100.;
	time step: 1.e-2;

	tolerance: 1.e-9;
	max iterations: 10;
	linear solver: naive, colamd;

	method: ms, .6;

	threads: disable;

	# output: iterations;
	# output: residual;
	output: counter;
	# output: none;
threads: disable;
end: initial value;

begin: control data;
	structural nodes: 1 + 3;
	joints: 1 + 3;
	rigid bodies: 3;

	default orientation: orientation vector;
	default output: accelerations;
end: control data;

set: const real OMEGA = 2*pi;

begin: nodes;
    structural: 0, static,
                null,
		eye,
		null,
		null;
    structural: 1, dynamic,
                null,
		eye,
		null,
		0., OMEGA, 0.;
    structural: 2, dynamic,
                null,
		eye,
		null,
		0., OMEGA, 0.;
    structural: 3, dynamic,
                null,
		eye,
		null,
		0., OMEGA, 0.;
end: nodes;

begin: elements;
	joint: 0, clamp, 0, node, node;

	# total, prescribed rotation
	joint: 1, total joint,
		0,
			position, reference, node, null,
			position orientation, reference, node, eye,
			rotation orientation, reference, node, eye,
		1,
			position, reference, node, null,
			position orientation, reference, node, eye,
			rotation orientation, reference, node, eye,
		position constraint, active, active, active,
			null,
		orientation constraint, active, active, active,
			0., 1., 0.,
				linear, 0., OMEGA;
	body: 1, 1,
		1.e0,
		null,
		diag, 1.e0, 1.e0, 1.e0;

	# total, prescribed angular velocity
	joint: 2, total joint,
		0,
			position, reference, node, null,
			position orientation, reference, node, eye,
			rotation orientation, reference, node, eye,
		2,
			position, reference, node, null,
			position orientation, reference, node, eye,
			rotation orientation, reference, node, eye,
		position constraint, active, active, active,
			null,
		orientation constraint, active, angular velocity, active,
			0., 1., 0.,
				const, OMEGA;
	body: 2, 2,
		1.e0,
		null,
		diag, 1.e0, 1.e0, 1.e0;

	joint: 3, axial rotation,
		0,
			position, reference, node, null,
			orientation, reference, node,
				3, 0., 1., 0.,
				1, 1., 0., 0.,
		3,
			position, reference, node, null,
			orientation, reference, node,
				3, 0., 1., 0.,
				1, 1., 0., 0.,
			const, OMEGA;
	body: 3, 3,
		1.e0,
		null,
		diag, 1.e0, 1.e0, 1.e0;
end: elements;


##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

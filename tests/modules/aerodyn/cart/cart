# Copyright (C) 2007 Pierangelo Masarati <masarati@aero.polimi.it>
# and Fanzhong MENBG <f.meng@tudelft.nl>
# 
# This file can be freely used and modified to be run with MBDyn
# provided this copyright notice is not altered nor removed.
#
# THIS MODEL IS PROVIDED AS IS, WITHOUT ANY WARRANTY OF ACCURACY
# OR FITNESS FOR ANY PURPOSE

# MBDyn model of the CART -  Controls Advanced Research Turbine
#
# Data taken from:
#
# September 2004 NREL/SR-500-32087
# Geometry and Structural Properties
# for the Controls Advanced Research Turbine (CART)
# from Model Tuning
#
# August 25, 2003Â­November 30, 2003
# K.A. Stol
# University of Auckland
# Auckland, New Zealand
# 
# Purpose:
#
# Test the development of module-aerodyn
# Needs module-aerodyn.so built with AeroDyn 12.58,
# and aerodyn.ipt, S809_cln.dat, and yawdyn.wnd from the same
# AeroDyn distribution
# Rigid blade and tower.

begin: data;
	problem: initial value;
end: data;

# Labels
set: integer GROUND = 1000;

set: integer TOWER = 2000;
set: integer TOWER_BOTTOM = TOWER + 100;
set: integer TOWER_TOP = TOWER + 200;

set: integer NACELLE = 3000;
set: integer NACELLE_YAW = NACELLE + 100;
set: integer NACELLE_ORIGIN = NACELLE + 200;
set: integer NACELLE_CG = NACELLE + 300;
set: integer NACELLE_LSS_COUPLING = NACELLE + 400;
set: integer NACELLE_TEETER = NACELLE + 500;

set: integer LSS = 4000;
set: integer LSS_BEARINGS = LSS + 100;
set: integer LSS_END = LSS + 200;
set: integer LSS_END_BEARINGS = LSS + 300;

set: integer TEETER = 5000;
set: integer TEETER_PIN = TEETER + 100;

set: integer ROTOR = 6000;
set: integer NACA0012 = 7000;

set: integer BLADE_1 = 10000;
set: integer BLADE_1_ROOT = BLADE_1 + 100;
set: integer BLADE_1_PITCH = BLADE_1 + 200;
set: integer BLADE_1_ORIGIN = BLADE_1 + 1000;

set: integer BLADE_2 = 20000;
set: integer BLADE_2_ROOT = BLADE_2 + 100;
set: integer BLADE_2_PITCH = BLADE_2 + 200;
set: integer BLADE_2_ORIGIN = BLADE_2 + 1000;

# Data
set: real TOWER_LENGTH = 34.862;				# m
set: real NACELLE_TILT_ANGLE = 3.77*deg2rad;			# radian
set: real BLADE_R = 19.995;					# m
set: real BLADE_CUTOUT = 1.381;					# m
# set to the initial azimuth;
# 0. means blade 1 up, rotating clockwise from upwind
set: real Psi0 = 0.;						# radian
# set to the initial rotation speed
set: real Omega0 = 0.;						# radian/s
# set to the initial blade root pitch
set: real Theta0 = 85.*deg2rad;					# radian

begin: initial value;
	initial time: 0.;
	final time: 1000.;
	time step: 1e-1;

	tolerance: 1e-6;
	max iterations: 20;
	method: ms, .6;

	derivatives coefficient: 1.e-6;
	derivatives tolerance: 1.e-3;
	derivatives max iterations: 20;

	newton raphson: modified, 4;
	output: iterations;
#	output: residual;
threads: disable;
end: initial value;

# begin reference frame definition

reference: GROUND,
	reference, global, null,
	reference, global, eye,
	reference, global, null,
	reference, global, null;

# The bottom of the tower is coincident with the ground,
# but its x axis is vertical, pointing up
reference: TOWER_BOTTOM,
	reference, GROUND, null,
	reference, GROUND,
		1, 0., 0., 1.,
		2, 0., 1., 0.,
	reference, GROUND, null,
	reference, GROUND, null;

reference: TOWER_TOP,
	reference, TOWER_BOTTOM,
		TOWER_LENGTH, 0., 0.,
	reference, TOWER_BOTTOM, eye,
	reference, TOWER_BOTTOM, null,
	reference, TOWER_BOTTOM, null;

# The nacelle yaw bearing is at the top of the tower
reference: NACELLE_YAW,
	reference, TOWER_TOP, null,
	reference, TOWER_TOP,
		3, 1., 0., 0.,
		2, 0., 1., 0.,
	reference, TOWER_TOP, null,
	reference, TOWER_TOP, null;

# The origin of the nacelle is 1.734 m above the nacelle yaw joint
# along the tower axis, with a fixed, imposed tilt
reference: NACELLE_ORIGIN,
	reference, NACELLE_YAW,
		0., 0., 1.734, # m
	reference, NACELLE_YAW,
		2, 0., -1., 0.,
		1, -cos(NACELLE_TILT_ANGLE), 0., -sin(NACELLE_TILT_ANGLE),
	reference, NACELLE_YAW, null,
	reference, NACELLE_YAW, null;

# The CG of the nacelle is 0.402 m upwind of the nacelle origin
reference: NACELLE_CG,
	reference, NACELLE_ORIGIN,
		-0.402, 0., 0.,
	reference, NACELLE_ORIGIN, eye,
	reference, NACELLE_ORIGIN, null,
	reference, NACELLE_ORIGIN, null;

# The Low Speed Shaft (LSS) coupling is 2.519 m upwind of the nacelle origin,
# oriented with axis 3 as the bear rotation axis
reference: NACELLE_LSS_COUPLING,
	reference, NACELLE_ORIGIN,
		-2.519, 0., 0.,
	reference, NACELLE_ORIGIN,
		3, 1., 0., 0.,
		2, 0., 1., 0.,
	reference, NACELLE_ORIGIN, null,
	reference, NACELLE_ORIGIN, null;

# The teeter pin is 3.867 m upwind of the nacelle origin
reference: NACELLE_TEETER,
	reference, NACELLE_ORIGIN,
		-3.867, 0., 0.,
	reference, NACELLE_ORIGIN, eye,
	reference, NACELLE_ORIGIN, null,
	reference, NACELLE_ORIGIN, null;

# The Low Speed Shaft (LSS) is oriented as the nacelle,
# possibly rotated clockwise from upwind by an initial azimuth Psi0,
# with the initial rotation speed Omega0
reference: LSS,
	reference, NACELLE_LSS_COUPLING, null,
	reference, NACELLE_ORIGIN,
		1, 1., 0., 0.,
		2, 0., cos(Psi0), sin(Psi0),
	reference, NACELLE_LSS_COUPLING, null,
	reference, NACELLE_ORIGIN, null;

reference: LSS_BEARINGS,
	reference, LSS, null,
	reference, LSS,
		3, 1., 0., 0.,
		2, 0., 1., 0.,
	reference, LSS, null,
	reference, LSS, null;

reference: LSS_END,
	reference, LSS,
		-0.688, 0., 0.,
	reference, LSS, eye,
	reference, LSS, null,
	reference, LSS, null;

reference: LSS_END_BEARINGS,
	reference, LSS_END, null,
	reference, LSS_END,
		3, 1., 0., 0.,
		2, 0., 1., 0.,
	reference, LSS_END, null,
	reference, LSS_END, null;

# The teeter spindle is oriented in the nacelle z direction
reference: TEETER,
	reference, NACELLE_TEETER, null,
	reference, LSS,
		3, 1., 0., 0.,
		1, 0., 0., 1.,
	reference, NACELLE_TEETER, null,
	reference, LSS, null;

# The teeter pin is oriented 90 deg apart from the blades
reference: TEETER_PIN,
	reference, TEETER, null,
	reference, TEETER,
		1, 1., 0., 0.,
		2, 0., 0., 1.,
	reference, TEETER, null,
	reference, TEETER, null;

# Blade 1
# The root of the blade is in the teeter;
# the blade axis goes from root to tip
reference: BLADE_1_ROOT,
	reference, TEETER, null,
	reference, TEETER,
		1, 1.0, 0., 0.,
		3, 0., 0., 1.,
	reference, TEETER, null,
	reference, TEETER, null;

# The pitch hinge is outside the rotation axis;
# the pitch is zero when the z axis (the chord) points upwind
reference: BLADE_1_PITCH,
	reference, BLADE_1_ROOT,
		BLADE_CUTOUT, 0., 0.,
	reference, BLADE_1_ROOT,
		1, 1., 0., 0.,
		2, 0., -1., 0.,
	reference, BLADE_1_ROOT, null,
	reference, BLADE_1_ROOT, null;

reference: BLADE_1_ORIGIN,
	reference, BLADE_1_PITCH, null,
	reference, BLADE_1_PITCH,
		1, 1., 0., 0.,
		2, 0., cos(Theta0), sin(Theta0),
	reference, BLADE_1_PITCH, null,
	reference, BLADE_1_PITCH, null;

# Blade 2
# The root of the blade is in the teeter;
# the blade axis goes from root to tip
reference: BLADE_2_ROOT,
	reference, TEETER, null,
	reference, TEETER,
		1, -1.0, 0., 0.,
		3, 0., 0., 1.,
	reference, TEETER, null,
	reference, TEETER, null;

# The pitch hinge is outside the rotation axis;
# the pitch is zero when the z axis (the chord) points upwind
reference: BLADE_2_PITCH,
	reference, BLADE_2_ROOT,
		BLADE_CUTOUT, 0., 0.,
	reference, BLADE_2_ROOT,
		1, 1., 0., 0.,
		2, 0., -1., 0.,
	reference, BLADE_2_ROOT, null,
	reference, BLADE_2_ROOT, null;

reference: BLADE_2_ORIGIN,
	reference, BLADE_2_PITCH, null,
	reference, BLADE_2_PITCH,
		1, 1., 0., 0.,
		2, 0., cos(Theta0), sin(Theta0),
	reference, BLADE_2_PITCH, null,
	reference, BLADE_2_PITCH, null;

# End reference frame definition

begin: control data;
	structural nodes:
		+1		# ground
		+1		# tower top
		+1		# nacelle
		+1		# low speed shaft (LSS)
		+1		# teeter
		+2*(
			+1	# rigid blade
		)
	;

	joints:
		+1		# ground clamp
		+1		# rigid tower (spherical + prismatic)
		+1		# nacelle yaw
		+1		# spring to retain yaw
		+1		# shaft rotation
		+1		# teeter
		+2*(
			+1	# blade pitch (Total joint)
		)
	;

	rigid bodies:
		+1		# tower top
		+1		# nacelle
		+1		# shaft(s)
		+1		# teeter
		+2*(
			+1	# rigid blade
		)
	;

	gravity;
	loadable elements:
		+1		# aerodyn
	;
end: control data;

begin: nodes;
	structural: GROUND, static,
		reference, GROUND, null,
		reference, GROUND, eye,
		reference, GROUND, null,
		reference, GROUND, null;

	structural: TOWER_TOP, dynamic,
		reference, TOWER_TOP, null,
		reference, TOWER_TOP, eye,
		reference, TOWER_TOP, null,
		reference, TOWER_TOP, null;

	structural: NACELLE, dynamic,
		reference, NACELLE_CG, null,
		reference, NACELLE_CG, 3, 1.0,0.,0., 2, 0.,1.0,0., 
		reference, NACELLE_CG, null,
		reference, NACELLE_CG, null;


	structural: LSS_END, dynamic,
		reference, LSS_END, null,
		reference, LSS_END, eye,
		reference, LSS_END, null,
		reference, LSS_END, null;

	structural: TEETER, dynamic,
		reference, TEETER, null,
		reference, TEETER, eye,
		reference, TEETER, null,
		reference, TEETER, null;

	structural: BLADE_1, dynamic,
		reference, BLADE_1_ORIGIN, 10.,0.,0.,
		reference, BLADE_1_ORIGIN, 3, 0.,0.,-1.0, 1, 1.0,0.,0.,
		reference, BLADE_1_ORIGIN, null,
		reference, BLADE_1_ORIGIN, null;


	structural: BLADE_2, dynamic,
		reference, BLADE_2_ORIGIN, 10.,0.,0.,
		reference, BLADE_2_ORIGIN, 3, 0.,0.,-1.0, 1, 1.0,0.,0.,
		reference, BLADE_2_ORIGIN, null,
		reference, BLADE_2_ORIGIN, null;

end: nodes;

begin: elements;
	gravity: 0., 0., -1,
		# const, 9.81;
		cosine, 0., .1/pi, 9.81/2., half, 0.;

	# ground clamp
	joint: GROUND, clamp, GROUND, node, node;

	# rigid tower
	joint: TOWER_TOP, clamp, TOWER_TOP, node, node;

/*	joint: TOWER, spherical hinge,
		GROUND,
			reference, GROUND, null,
			hinge, reference, GROUND, eye,
		TOWER_TOP,
			reference, GROUND, null,
			hinge, reference, GROUND, eye;
	joint: TOWER + 1, prismatic,
		GROUND,
			hinge, reference, GROUND, eye,
		TOWER_TOP,
			hinge, reference, GROUND, eye; */


	body: TOWER_TOP, TOWER_TOP,
		1.,
		null,
		eye;

	# nacelle
	joint: NACELLE_YAW, revolute hinge,
		TOWER_TOP,
			reference, NACELLE_YAW, null,
			hinge, reference, NACELLE_YAW, eye,
		NACELLE,
			reference, NACELLE_YAW, null,
			hinge, reference, NACELLE_YAW, eye;
	joint: NACELLE_YAW + 1, deformable hinge,
		TOWER_TOP,
			hinge, reference, NACELLE_YAW, eye,
		NACELLE,
			hinge, reference, NACELLE_YAW, eye,
		linear viscoelastic isotropic, 1e8, 1e3;

	body: NACELLE, NACELLE,
		23228.0,
		reference, NACELLE_CG, null,
		diag, 1.01e3, 3.659e4, 3.659e4;


	# shaft bearings
	joint: LSS_END_BEARINGS, revolute hinge,
		NACELLE,
			reference, LSS_END_BEARINGS, null,
			hinge, reference, LSS_END_BEARINGS, eye,
		LSS_END,
			reference, LSS_END_BEARINGS, null,
			hinge, reference, LSS_END_BEARINGS, eye;

	body: LSS, LSS_END,
		condense, 2,
		0.,
		reference, LSS, null,
		diag, 34.4*43.165^2, 0., 0.,	# Ix * tau^2
		# hub yoke
		5885.,
		reference, TEETER, null,
		null;

	# teeter pin
/*
	joint: TEETER_PIN, revolute hinge,
		LSS_END,
			reference, TEETER_PIN, null,
			hinge, reference, TEETER_PIN, eye,
		TEETER,
			reference, TEETER_PIN, null,
			hinge, reference, TEETER_PIN, eye;
    */
	joint: TEETER_PIN, total joint,
		LSS_END,
			position, reference, TEETER_PIN, null,
			position orientation, reference, TEETER_PIN, eye,
			rotation orientation, reference, TEETER_PIN, eye,
		TEETER,
			position, reference, TEETER_PIN, null,
			position orientation, reference, TEETER_PIN, eye,
			rotation orientation, reference, TEETER_PIN, eye,
		position constraint, active, active, active,
			null,
		orientation constraint, active, active, active,
			null;

	body: TEETER, TEETER,
		5852.,
		null,
		diag, 0., 1.5e4, 1.5e4;

	# blade 1 pitch
	joint: BLADE_1_PITCH, total joint,
		TEETER,
		  position, reference, BLADE_1_ORIGIN, null,
		  position orientation, reference, BLADE_1_ORIGIN, eye,
		  rotation orientation, reference, BLADE_1_ORIGIN, eye,
		BLADE_1,
		  position, reference, BLADE_1_ORIGIN, null,
		  position orientation, reference, BLADE_1_ORIGIN, eye,
		  rotation orientation, reference, BLADE_1_ORIGIN, eye,
		position constraint,
		  active, active, active,
		  null,
		orientation constraint,
		  active, active, active,
		  1.0,0.,0.,
		  const, 0.0;

	body: BLADE_1, BLADE_1,
		200.,
		reference, BLADE_1_ORIGIN,
			(BLADE_R + BLADE_CUTOUT)/2., 0., 0.,
		diag,
			0.,
			((BLADE_R + BLADE_CUTOUT)/2.)^2/12.*200.,
			((BLADE_R + BLADE_CUTOUT)/2.)^2/12.*200.;


	# blade 1 aerodynamics
/*	aerodynamic body: BLADE_1, BLADE_1,
		rotor, ROTOR,
		reference, BLADE_1_ORIGIN,
			(BLADE_R + BLADE_CUTOUT)/2., 0., 0.,
		reference, BLADE_1_ORIGIN,
			1, 0., 0., 1.,
			3, 1., 0., 0.,
		BLADE_R - BLADE_CUTOUT,
		linear, 1.143, 0.762,
		const, 0.,
		const, 0.,
		linear, -3.44*deg2rad, 3.31*deg2rad,
		AERO_INTEGRATION_POINTS,
		c81, NACA0012;*/

	# blade 2 pitch
	joint: BLADE_2_PITCH, total joint,
		TEETER,
		  position, reference, BLADE_2_ORIGIN, null,
		  position orientation, reference, BLADE_2_ORIGIN, eye,
		  rotation orientation, reference, BLADE_2_ORIGIN, eye,
		BLADE_2,
		  position, reference, BLADE_2_ORIGIN, null,
		  position orientation, reference, BLADE_2_ORIGIN, eye,
		  rotation orientation, reference, BLADE_2_ORIGIN, eye,
		position constraint,
		  active, active, active,
		  null,
		orientation constraint,
		  active, active, active,
		  1.0,0.,0.,
		  const, 0.0;

	body: BLADE_2, BLADE_2,
		200.,
		reference, BLADE_2_ORIGIN,
			(BLADE_R + BLADE_CUTOUT)/2., 0., 0.,
		diag,
			0.,
			((BLADE_R + BLADE_CUTOUT)/2.)^2/12.*200.,
			((BLADE_R + BLADE_CUTOUT)/2.)^2/12.*200.;

	loadable: 1000, "./module-aerodyn.so", help,
		NACELLE,	# nacelle node label
		TEETER,		# hub node label
		3.86,		# pilon top-hub xy distance
		2,		# number of blades
		1,		# number of elements per blade
		reference, BLADE_1_ORIGIN,
			3, 0.0,0.0,-1.0,
			1, 1.0,0.0, 0.0,   # blade 1 orientation
		BLADE_1,	# blade 1 nodes
			orientation, reference, node,
				1, 0.,cos(Theta0),sin(Theta0),
				3, 1.,0.,0.,

		reference, BLADE_2_ORIGIN,
			3, 0.0,0.0,-1.0,
			1, 1.0,0.0, 0.0,   # blade 2 orientation
		BLADE_2,	# blade 2 nodes
			orientation, reference, node,
				1, 0.,cos(Theta0),sin(Theta0),
				3, 1.,0.,0.,

		output file name, "out.ad",
		input file name, "aerodyn.ipt";

end: elements;

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 1
##############################################################################################################

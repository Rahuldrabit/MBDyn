# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2017
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

set: real VAL = 5.5;
remark: "creating real variable VAL = " + VAL;

begin: data;
	problem: initial value;
end: data;

begin: initial value;
threads: disable;
end: initial value;

begin: control data;
	structural nodes: 1;
	rigid bodies: 1;
end: control data;

remark: "staticizing as bool: " + bool_eval(VAL);
remark: "staticizing as integer: " + integer_eval(VAL);
remark: "staticizing as real: " + real_eval(VAL);
remark: "staticizing as string: " + string_eval(VAL);

drive caller: 1, string, "VAL";
drive caller: 2, string, "real_eval(VAL)";

remark: "creating drive_caller(1): string, \"VAL\"";
remark: "creating drive caller(2): string, \"real_eval(VAL)\"";

remark: "drive_caller(1) = " + model::drive(1) + "; drive_caller(2) = " + model::drive(2);
remark: "modifying: VAL = " + VAL + " + 2 ...";
set: VAL = VAL + 2;
remark: "    ... -> VAL = " + VAL + " ...";

remark: "drive_caller(1) = " + model::drive(1) + "; drive_caller(2) = " + model::drive(2);

begin: nodes;
	structural: 1, dynamic, null, eye, null, null;
end: nodes;

drive caller: 3, string, "model::drive(1) + model::drive(2)";
drive caller: 4, string, "real_eval(model::drive(1) + model::drive(2))";

remark: "creating drive_caller(3): string, \"model::drive(1) + model::drive(2)\"";
remark: "creating drive_caller(4): string, \"real_eval(model::drive(1) + model::drive(2))\"";

remark: "drive_caller(3) = " + model::drive(3) + "; drive_caller(4) = " + model::drive(4);
remark: "modifying: VAL = " + VAL + " + 2 ...";
set: VAL = VAL + 2;
remark: "    ... -> VAL = " + VAL + " ...";
remark: "drive_caller(3) = " + model::drive(3) + "; drive_caller(4) = " + model::drive(4);

begin: elements;
	body: 1, 1, 1., null, eye;
end: elements;

# vim:ft=mbd

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

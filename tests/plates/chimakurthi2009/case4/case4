# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/tests/plates/chimakurthi2009/case4/case4,v 1.9 2017/01/12 15:06:54 masarati Exp $
#
# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2017
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# Author: Pierangelo Masarati <masarati@aero.polimi.it> (except when noted)
# 
# Case 4: cantilever subjected to flapping
#
# 32x9 mesh

begin: data;
	problem: initial value;
end: data;

include: "case4_m.set";

#set: FREQ = 5;
#set: FREQ = 10;
set: FREQ = 30;

begin: initial value;
	initial time: 0.;
	final time: 4/FREQ;
	time step: 1e-5;	# when FREQ == 30
	# time step: 1.5e-4;	# when FREQ == 5, 10

	tolerance: 1e-2, 1e-4;
	max iterations: 30;

	# method: ms, .6;
	method: bdf;

	threads: disable;
	# linear solver: klu, cc;
	linear solver: umfpack, cc, scale, iterative, always, max iterations, 100;

	# output: iterations;

	# abort after: input;

	/*
	eigenanalysis: 2e-5,
		# parameter, 1.e-6,
		use lapack, lower frequency limit, .1, upper frequency limit, 200,
		# parameter, 1.e-4, use arpack, 20, 100, 0.,
		
		output eigenvectors, output geometry;
	*/
        derivatives max iterations: 10;
        derivatives tolerance: 1e-4, 1e-4;
        output: iterations, solver condition number, stat, yes;
        nonlinear solver: nox, modified, 100, keep jacobian matrix, direction, broyden, forcing term, type 2;

threads: disable;
end: initial value;

begin: control data;
	structural nodes:
		+ NNODES
	;
	joints:
		+ NJOINTS
	;
	plates:
		+ NSHELLS
	;
	rigid bodies:
		+ NBODIES
	;
end: control data;

reference: 0,
	reference, global, null,
	reference, global, eye,
	reference, global, null,
	reference, global, null;

begin: nodes;
	include: "case4_m.nod";
end: nodes;

begin: elements;
	include: "case4_m.elm";
end: elements;

# vim:ft=mbd

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 1
##############################################################################################################

## @MBDYN_SIMPLE_TESTSUITE_EXCLUDE@ = 0

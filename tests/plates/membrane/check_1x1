/*
 *     4    3
 *
 *  8|>O----O -->
 *     |    |
 *   |>O----O -->
 *          ^
 *     1    2
 */

begin: data;
	problem: initial value;
end: data;

#set: const real E = 7.0e+10;
set: const real E = 1.;
set: const real NU = 0; # 3.0e-01;

set: real G = E/(2*(1 + NU));

/*
 * the model is defined on reference frame REF
 */
set: const integer REF = 1;
reference: REF,
        reference, global, 0., 0., 0.,
        reference, global, 1, 1., 0., 0., 3, 0., 0., 1.,
        # reference, global, 1, 1., 1., 1., 3, -1., -1., 1.,
        reference, global, null,
        reference, global, null;

begin: initial value;
	initial time: 0.;
	time step: 0.1;
	final time: 1.;

	tolerance: 1e-9;
	max iterations: 10;

	threads: disable;

	method: ms, .6;
	# linear solver: umfpack, cc;
	linear solver: naive, colamd;
	
	derivatives tolerance: 1e6;

	# output: iterations;
	# output: residual;
	# output: jacobian;
threads: disable;
end: initial value;

begin: control data;
	structural nodes:
		+ 4	# shell
	;
	joints:
		+ 4	# total pin
	;
	plates:
		+ 1
	;
	forces:
		0
	;
	default orientation: orientation vector;
	default output: plates;
	max iterations: 10;
end: control data;

begin: nodes;

	structural: 1, static ,
		reference, REF, 0., 0., 0.,
		reference, REF, eye,
		reference, REF, null,
		reference, REF, null;

	structural: 2, static ,
		reference, REF, 1., 0., 0.,
		reference, REF, eye,
		reference, REF, null,
		reference, REF, null;

	structural: 3, static ,
		reference, REF, 1., 1., 0.,
		reference, REF, eye,
		reference, REF, null,
		reference, REF, null;

	structural: 4, static ,
		reference, REF, 0., 1., 0.,
		reference, REF, eye,
		reference, REF, null,
		reference, REF, null;

end: nodes;

set: const integer IX = 1;
set: const integer IY = 2;
drive caller: IX,
	linear, 0., 1.;
	# cosine, 0., pi/1., 1./2, half, 0.;
drive caller: IY, linear, 0., 1.;

begin: elements;
	membrane4eas: 1,
		1, 2, 3, 4,
		isotropic, E, E, nu, NU, thickness, 1.0e-03
		# , prestress, 10000., 0., 0. # , 0., 0., 0., 0., 0., 0., 0., 0., 0.
		, output, yes
		;

	joint: 1, total pin joint,
		1,
			position, reference, node, null,
			position orientation, reference, node, eye,
			rotation orientation, reference, node, eye,
		position, reference, other node, null,
		position orientation, reference, other node, eye,
		rotation orientation, reference, other node, eye,
		position constraint, 1, 1, 1, null,
		orientation constraint, 1, 1, 1, null;

	joint: 2, total pin joint,
		2,
			position, reference, node, null,
			position orientation, reference, node, eye,
			rotation orientation, reference, node, eye,
		position, reference, other node, null,
		position orientation, reference, other node, eye,
		rotation orientation, reference, other node, eye,
		position constraint,
			1, 1, 1, component, reference, IX, 0., 0.,
		orientation constraint, 1, 1, 1, null;

	joint: 3, total pin joint,
		3,
			position, reference, node, null,
			position orientation, reference, node, eye,
			rotation orientation, reference, node, eye,
		position, reference, other node, null,
		position orientation, reference, other node, eye,
		rotation orientation, reference, other node, eye,
		position constraint,
			1, 0, 1, component, reference, IX, 0., 0.,
		orientation constraint, 1, 1, 1, null;

	joint: 4, total pin joint,
		4,
			position, reference, node, null,
			position orientation, reference, node, eye,
			rotation orientation, reference, node, eye,
		position, reference, other node, null,
		position orientation, reference, other node, eye,
		rotation orientation, reference, other node, eye,
		position constraint, 1, 0, 1, null,
		orientation constraint, 1, 1, 1, null;
end: elements;

# vim:ft=mbd

##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################

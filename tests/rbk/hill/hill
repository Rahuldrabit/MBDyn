# $Header: /var/cvs/mbdyn/mbdyn/mbdyn-1.0/tests/rbk/hill/hill,v 1.4 2017/01/12 15:08:56 masarati Exp $
#
# MBDyn (C) is a multibody analysis code. 
# http://www.mbdyn.org
# 
# Copyright (C) 1996-2017
# 
# Pierangelo Masarati	<masarati@aero.polimi.it>
# Paolo Mantegazza	<mantegazza@aero.polimi.it>
# 
# Dipartimento di Ingegneria Aerospaziale - Politecnico di Milano
# via La Masa, 34 - 20156 Milano, Italy
# http://www.aero.polimi.it
# 
# Changing this copyright notice is forbidden.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation (version 2 of the License).
# 
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# "tethered" system in geostationary orbit

begin: data;
	problem: initial value;
end: data;

begin: initial value;
	initial time: 0.;
	final time: 86400.;
	time step: 1.;

	method: ms, .6;

	tolerance: 1e-9;
	max iterations: 10;

	# output: iterations;

	eigenanalysis: 1., use lapack;
threads: disable;
end: initial value;

set: const real GM = 398600.4418e+9;
set: const real OMEGA = 2*pi/86400;
set: const real R = (GM/OMEGA^2)^(1./3.);

remark: "R", R;

begin: control data;
	structural nodes: 2;
	rigid bodies: 2;
	joints: 1;
	forces: 2;

	rigid body kinematics:
		const, angular velocity, OMEGA, 0., 0.;
end: control data;

reference: 0,
	0., 0., R,
	eye,
	null,
	null;

set: real L = 100.;
set: real DVZ = 0.e0;
set: real DVY = 1.e0;
set: real M1 = 1.;
set: real M2 = 1.;
set: real K = (1e-2*2*pi)^2*(M1 + M2)/2;

begin: nodes;
	structural: 1, dynamic,
		reference, 0, 0., 0., L/2,
		reference, 0, eye,
		reference, 0, 0., DVY, DVZ,
		reference, 0, null;

	structural: 2, dynamic,
		reference, 0, 0., 0., -L/2,
		reference, 0, eye,
		reference, 0, 0., -DVY, -DVZ,
		reference, 0, null;
end: nodes;

remark: "P(1)", model::xposition(1), model::yposition(1), model::zposition(1), model::position(1);
remark: "P(2)", model::xposition(2), model::yposition(2), model::zposition(2), model::position(2);
remark: "V(1)", model::xvelocity(1), model::yvelocity(1), model::zvelocity(1), model::velocity(1);
remark: "V(2)", model::xvelocity(2), model::yvelocity(2), model::zvelocity(2), model::velocity(2);

begin: elements;
	body: 1, 1, M1, null, eye;

	body: 2, 2, M2, null, eye;

	joint: 12, rod,
		1,
		2,
		from nodes,
		linear viscoelastic, K*L/2, proportional, 1e-6;

	force: 1, absolute,
		1,
			position, reference, node, null,
		component,
			0.,
			string, "-model::yposition(1)/model::position(1)^3*GM*M1",
			string, "-model::zposition(1)/model::position(1)^3*GM*M1";

	force: 2, absolute,
		2,
			position, reference, node, null,
		component,
			0.,
			string, "-model::yposition(2)/model::position(2)^3*GM*M1",
			string, "-model::zposition(2)/model::position(2)^3*GM*M1";
end: elements;


##############################################################################################################
## Variables to be updated by simple_testsuite.sh --update-reference-test-status
## Warning, do not edit!!!
## @MBDYN_SIMPLE_TESTSUITE_EXIT_STATUS@ = 0
##############################################################################################################
